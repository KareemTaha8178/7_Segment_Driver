

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Sep 20 23:42:07 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   00FC09                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _port_register
    62   00FC09  80                 	db	128
    63   00FC0A  0F                 	db	15
    64   00FC0B  81                 	db	129
    65   00FC0C  0F                 	db	15
    66   00FC0D  82                 	db	130
    67   00FC0E  0F                 	db	15
    68   00FC0F  83                 	db	131
    69   00FC10  0F                 	db	15
    70   00FC11  84                 	db	132
    71   00FC12  0F                 	db	15
    72                           
    73                           ;initializer for _lat_register
    74   00FC13  89                 	db	137
    75   00FC14  0F                 	db	15
    76   00FC15  8A                 	db	138
    77   00FC16  0F                 	db	15
    78   00FC17  8B                 	db	139
    79   00FC18  0F                 	db	15
    80   00FC19  8C                 	db	140
    81   00FC1A  0F                 	db	15
    82   00FC1B  8D                 	db	141
    83   00FC1C  0F                 	db	15
    84                           
    85                           ;initializer for _tris_register
    86   00FC1D  92                 	db	146
    87   00FC1E  0F                 	db	15
    88   00FC1F  93                 	db	147
    89   00FC20  0F                 	db	15
    90   00FC21  94                 	db	148
    91   00FC22  0F                 	db	15
    92   00FC23  95                 	db	149
    93   00FC24  0F                 	db	15
    94   00FC25  96                 	db	150
    95   00FC26  0F                 	db	15
    96                           
    97                           ;initializer for _segment_t1
    98   00FC27  02                 	db	2
    99   00FC28  0A                 	db	10
   100   00FC29  12                 	db	18
   101   00FC2A  1A                 	db	26
   102   00FC2B  00                 	db	0
   103                           
   104                           ;initializer for _hour
   105   00FC2C  07                 	db	7
   106                           
   107                           ;initializer for _min
   108   00FC2D  0A                 	db	10
   109                           
   110                           ;initializer for _sec
   111   00FC2E  32                 	db	50
   112                           
   113                           ;initializer for _ret
   114   00FC2F  01                 	db	1
   115   000000                     _PORTE	set	3972
   116   000000                     _PORTD	set	3971
   117   000000                     _PORTC	set	3970
   118   000000                     _PORTB	set	3969
   119   000000                     _PORTA	set	3968
   120   000000                     _LATA	set	3977
   121   000000                     _TRISA	set	3986
   122   000000                     _TRISE	set	3990
   123   000000                     _TRISD	set	3989
   124   000000                     _TRISC	set	3988
   125   000000                     _TRISB	set	3987
   126   000000                     _LATE	set	3981
   127   000000                     _LATD	set	3980
   128   000000                     _LATC	set	3979
   129   000000                     _LATB	set	3978
   130                           
   131                           ; #config settings
   132                           
   133                           	psect	cinit
   134   00FC30                     __pcinit:
   135                           	callstack 0
   136   00FC30                     start_initialization:
   137                           	callstack 0
   138   00FC30                     __initialization:
   139                           	callstack 0
   140                           
   141                           ; Initialize objects allocated to COMRAM (39 bytes)
   142                           ; load TBLPTR registers with __pidataCOMRAM
   143   00FC30  0E09               	movlw	low __pidataCOMRAM
   144   00FC32  6EF6               	movwf	tblptrl,c
   145   00FC34  0EFC               	movlw	high __pidataCOMRAM
   146   00FC36  6EF7               	movwf	tblptrh,c
   147   00FC38  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   148   00FC3A  6EF8               	movwf	tblptru,c
   149   00FC3C  EE00  F001         	lfsr	0,__pdataCOMRAM
   150   00FC40  EE10 F027          	lfsr	1,39
   151   00FC44                     copy_data0:
   152   00FC44  0009               	tblrd		*+
   153   00FC46  CFF5 FFEE          	movff	tablat,postinc0
   154   00FC4A  50E5               	movf	postdec1,w,c
   155   00FC4C  50E1               	movf	fsr1l,w,c
   156   00FC4E  E1FA               	bnz	copy_data0
   157                           
   158                           ; Clear objects allocated to COMRAM (15 bytes)
   159   00FC50  EE00  F028         	lfsr	0,__pbssCOMRAM
   160   00FC54  0E0F               	movlw	15
   161   00FC56                     clear_0:
   162   00FC56  6AEE               	clrf	postinc0,c
   163   00FC58  06E8               	decf	wreg,f,c
   164   00FC5A  E1FD               	bnz	clear_0
   165   00FC5C                     end_of_initialization:
   166                           	callstack 0
   167   00FC5C                     __end_of__initialization:
   168                           	callstack 0
   169   00FC5C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   170   00FC5E  6EF8               	movwf	tblptru,c
   171   00FC60  0100               	movlb	0
   172   00FC62  EF2E  F07F         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMRAM
   175   000028                     __pbssCOMRAM:
   176                           	callstack 0
   177   000028                     relay_turn_off@F2880:
   178                           	callstack 0
   179   000028                     	ds	1
   180   000029                     relay_turn_on@F2875:
   181                           	callstack 0
   182   000029                     	ds	1
   183   00002A                     relay_initialize@F2870:
   184                           	callstack 0
   185   00002A                     	ds	1
   186   00002B                     led_toggle_logic@F2891:
   187                           	callstack 0
   188   00002B                     	ds	1
   189   00002C                     led_turn_off@F2886:
   190                           	callstack 0
   191   00002C                     	ds	1
   192   00002D                     led_turn_on@F2881:
   193                           	callstack 0
   194   00002D                     	ds	1
   195   00002E                     led_initialize@F2876:
   196                           	callstack 0
   197   00002E                     	ds	1
   198   00002F                     Dc_motor_stop@F2900:
   199                           	callstack 0
   200   00002F                     	ds	1
   201   000030                     Dc_motor_stop@F2898:
   202                           	callstack 0
   203   000030                     	ds	1
   204   000031                     Dc_motor_turn_right@F2893:
   205                           	callstack 0
   206   000031                     	ds	1
   207   000032                     Dc_motor_turn_right@F2891:
   208                           	callstack 0
   209   000032                     	ds	1
   210   000033                     Dc_motor_turn_left@F2886:
   211                           	callstack 0
   212   000033                     	ds	1
   213   000034                     Dc_motor_turn_left@F2884:
   214                           	callstack 0
   215   000034                     	ds	1
   216   000035                     Dc_motor_initialize@F2877:
   217                           	callstack 0
   218   000035                     	ds	1
   219   000036                     Dc_motor_initialize@F2875:
   220                           	callstack 0
   221   000036                     	ds	1
   222                           
   223                           	psect	dataCOMRAM
   224   000001                     __pdataCOMRAM:
   225                           	callstack 0
   226   000001                     _port_register:
   227                           	callstack 0
   228   000001                     	ds	10
   229   00000B                     _lat_register:
   230                           	callstack 0
   231   00000B                     	ds	10
   232   000015                     _tris_register:
   233                           	callstack 0
   234   000015                     	ds	10
   235   00001F                     _segment_t1:
   236                           	callstack 0
   237   00001F                     	ds	5
   238   000024                     _hour:
   239                           	callstack 0
   240   000024                     	ds	1
   241   000025                     _min:
   242                           	callstack 0
   243   000025                     	ds	1
   244   000026                     _sec:
   245                           	callstack 0
   246   000026                     	ds	1
   247   000027                     _ret:
   248                           	callstack 0
   249   000027                     	ds	1
   250                           
   251                           	psect	cstackCOMRAM
   252   000037                     __pcstackCOMRAM:
   253                           	callstack 0
   254   000037                     ?___awdiv:
   255                           	callstack 0
   256   000037                     ?___awmod:
   257                           	callstack 0
   258   000037                     gpio_port_direction_init@direction_init:
   259                           	callstack 0
   260   000037                     ___awdiv@dividend:
   261                           	callstack 0
   262   000037                     ___awmod@dividend:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x0
   266   000037                     	ds	1
   267   000038                     ??_gpio_port_direction_init:
   268                           
   269                           ; 1 bytes @ 0x1
   270   000038                     	ds	1
   271   000039                     ___awdiv@divisor:
   272                           	callstack 0
   273   000039                     ___awmod@divisor:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x2
   277   000039                     	ds	1
   278   00003A                     gpio_port_direction_init@ret:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x3
   282   00003A                     	ds	1
   283   00003B                     gpio_port_direction_init@port:
   284                           	callstack 0
   285   00003B                     ___awdiv@counter:
   286                           	callstack 0
   287   00003B                     ___awmod@counter:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x4
   291   00003B                     	ds	1
   292   00003C                     ___awdiv@sign:
   293                           	callstack 0
   294   00003C                     ___awmod@sign:
   295                           	callstack 0
   296                           
   297                           ; 1 bytes @ 0x5
   298   00003C                     	ds	1
   299   00003D                     ___awdiv@quotient:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0x6
   303   00003D                     	ds	2
   304   00003F                     gpio_port_write_logic@logic:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x8
   308   00003F                     	ds	1
   309   000040                     ??_gpio_port_write_logic:
   310                           
   311                           ; 1 bytes @ 0x9
   312   000040                     	ds	2
   313   000042                     gpio_port_write_logic@port:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0xB
   317   000042                     	ds	1
   318   000043                     ??_main:
   319                           
   320                           ; 1 bytes @ 0xC
   321   000043                     	ds	1
   322   000044                     main@counter:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0xD
   326   000044                     	ds	1
   327                           
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 33 in file "Application.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  counter         1   13[COMRAM] unsigned char 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  2  270[None  ] int 
   340 ;; Registers used:
   341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;Total ram usage:        2 bytes
   352 ;; Hardware stack levels required when called: 2
   353 ;; This function calls:
   354 ;;		_Application_initialize
   355 ;;		___awdiv
   356 ;;		___awmod
   357 ;;		_gpio_port_write_logic
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text0
   364   00FE5C                     __ptext0:
   365                           	callstack 0
   366   00FE5C                     _main:
   367                           	callstack 29
   368   00FE5C                     
   369                           ;Application.c: 34:     Application_initialize();
   370   00FE5C  ECF7  F07D         	call	_Application_initialize	;wreg free
   371   00FE60                     l1648:
   372                           
   373                           ;Application.c: 36:         for(uint8 counter = 0; counter <= 50; counter++){
   374   00FE60  0E00               	movlw	0
   375   00FE62  6E44               	movwf	main@counter^0,c
   376   00FE64                     l1654:
   377                           
   378                           ;Application.c: 37:             gpio_port_write_logic(PORTD_INDEX, 0x01);
   379   00FE64  0E01               	movlw	1
   380   00FE66  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   381   00FE68  0E03               	movlw	3
   382   00FE6A  EC33  F07E         	call	_gpio_port_write_logic
   383                           
   384                           ;Application.c: 38:             gpio_port_write_logic(PORTC_INDEX, (uint8)(hour/10));
   385   00FE6E  C024  F037         	movff	_hour,___awdiv@dividend
   386   00FE72  6A38               	clrf	(___awdiv@dividend+1)^0,c
   387   00FE74  0E00               	movlw	0
   388   00FE76  6E3A               	movwf	(___awdiv@divisor+1)^0,c
   389   00FE78  0E0A               	movlw	10
   390   00FE7A  6E39               	movwf	___awdiv@divisor^0,c
   391   00FE7C  ECCC  F07E         	call	___awdiv	;wreg free
   392   00FE80  5037               	movf	?___awdiv^0,w,c
   393   00FE82  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   394   00FE84  0E02               	movlw	2
   395   00FE86  EC33  F07E         	call	_gpio_port_write_logic
   396   00FE8A                     
   397                           ;Application.c: 39:             _delay(3333);
   398   00FE8A  0E05               	movlw	5
   399   00FE8C  6E43               	movwf	??_main^0,c
   400   00FE8E  0E53               	movlw	83
   401   00FE90                     u1017:
   402   00FE90  2EE8               	decfsz	wreg,f,c
   403   00FE92  D7FE               	bra	u1017
   404   00FE94  2E43               	decfsz	??_main^0,f,c
   405   00FE96  D7FC               	bra	u1017
   406   00FE98                     
   407                           ;Application.c: 40:             gpio_port_write_logic(PORTD_INDEX, 0x02);
   408   00FE98  0E02               	movlw	2
   409   00FE9A  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   410   00FE9C  0E03               	movlw	3
   411   00FE9E  EC33  F07E         	call	_gpio_port_write_logic
   412   00FEA2                     
   413                           ;Application.c: 41:             gpio_port_write_logic(PORTC_INDEX, (uint8)(hour%10));
   414   00FEA2  C024  F037         	movff	_hour,___awmod@dividend
   415   00FEA6  6A38               	clrf	(___awmod@dividend+1)^0,c
   416   00FEA8  0E00               	movlw	0
   417   00FEAA  6E3A               	movwf	(___awmod@divisor+1)^0,c
   418   00FEAC  0E0A               	movlw	10
   419   00FEAE  6E39               	movwf	___awmod@divisor^0,c
   420   00FEB0  EC74  F07E         	call	___awmod	;wreg free
   421   00FEB4  5037               	movf	?___awmod^0,w,c
   422   00FEB6  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   423   00FEB8  0E02               	movlw	2
   424   00FEBA  EC33  F07E         	call	_gpio_port_write_logic
   425   00FEBE                     
   426                           ;Application.c: 42:             _delay(3333);
   427   00FEBE  0E05               	movlw	5
   428   00FEC0  6E43               	movwf	??_main^0,c
   429   00FEC2  0E53               	movlw	83
   430   00FEC4                     u1027:
   431   00FEC4  2EE8               	decfsz	wreg,f,c
   432   00FEC6  D7FE               	bra	u1027
   433   00FEC8  2E43               	decfsz	??_main^0,f,c
   434   00FECA  D7FC               	bra	u1027
   435                           
   436                           ;Application.c: 43:             gpio_port_write_logic(PORTD_INDEX, 0x04);
   437   00FECC  0E04               	movlw	4
   438   00FECE  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   439   00FED0  0E03               	movlw	3
   440   00FED2  EC33  F07E         	call	_gpio_port_write_logic
   441                           
   442                           ;Application.c: 44:             gpio_port_write_logic(PORTC_INDEX, (uint8)(min/10));
   443   00FED6  C025  F037         	movff	_min,___awdiv@dividend
   444   00FEDA  6A38               	clrf	(___awdiv@dividend+1)^0,c
   445   00FEDC  0E00               	movlw	0
   446   00FEDE  6E3A               	movwf	(___awdiv@divisor+1)^0,c
   447   00FEE0  0E0A               	movlw	10
   448   00FEE2  6E39               	movwf	___awdiv@divisor^0,c
   449   00FEE4  ECCC  F07E         	call	___awdiv	;wreg free
   450   00FEE8  5037               	movf	?___awdiv^0,w,c
   451   00FEEA  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   452   00FEEC  0E02               	movlw	2
   453   00FEEE  EC33  F07E         	call	_gpio_port_write_logic
   454   00FEF2                     
   455                           ;Application.c: 45:             _delay(3333);
   456   00FEF2  0E05               	movlw	5
   457   00FEF4  6E43               	movwf	??_main^0,c
   458   00FEF6  0E53               	movlw	83
   459   00FEF8                     u1037:
   460   00FEF8  2EE8               	decfsz	wreg,f,c
   461   00FEFA  D7FE               	bra	u1037
   462   00FEFC  2E43               	decfsz	??_main^0,f,c
   463   00FEFE  D7FC               	bra	u1037
   464   00FF00                     
   465                           ;Application.c: 46:             gpio_port_write_logic(PORTD_INDEX, 0x08);
   466   00FF00  0E08               	movlw	8
   467   00FF02  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   468   00FF04  0E03               	movlw	3
   469   00FF06  EC33  F07E         	call	_gpio_port_write_logic
   470   00FF0A                     
   471                           ;Application.c: 47:             gpio_port_write_logic(PORTC_INDEX, (uint8)(min%10));
   472   00FF0A  C025  F037         	movff	_min,___awmod@dividend
   473   00FF0E  6A38               	clrf	(___awmod@dividend+1)^0,c
   474   00FF10  0E00               	movlw	0
   475   00FF12  6E3A               	movwf	(___awmod@divisor+1)^0,c
   476   00FF14  0E0A               	movlw	10
   477   00FF16  6E39               	movwf	___awmod@divisor^0,c
   478   00FF18  EC74  F07E         	call	___awmod	;wreg free
   479   00FF1C  5037               	movf	?___awmod^0,w,c
   480   00FF1E  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   481   00FF20  0E02               	movlw	2
   482   00FF22  EC33  F07E         	call	_gpio_port_write_logic
   483   00FF26                     
   484                           ;Application.c: 48:             _delay(3333);
   485   00FF26  0E05               	movlw	5
   486   00FF28  6E43               	movwf	??_main^0,c
   487   00FF2A  0E53               	movlw	83
   488   00FF2C                     u1047:
   489   00FF2C  2EE8               	decfsz	wreg,f,c
   490   00FF2E  D7FE               	bra	u1047
   491   00FF30  2E43               	decfsz	??_main^0,f,c
   492   00FF32  D7FC               	bra	u1047
   493                           
   494                           ;Application.c: 49:             gpio_port_write_logic(PORTD_INDEX, 0x10);
   495   00FF34  0E10               	movlw	16
   496   00FF36  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   497   00FF38  0E03               	movlw	3
   498   00FF3A  EC33  F07E         	call	_gpio_port_write_logic
   499                           
   500                           ;Application.c: 50:             gpio_port_write_logic(PORTC_INDEX, (uint8)(sec/10));
   501   00FF3E  C026  F037         	movff	_sec,___awdiv@dividend
   502   00FF42  6A38               	clrf	(___awdiv@dividend+1)^0,c
   503   00FF44  0E00               	movlw	0
   504   00FF46  6E3A               	movwf	(___awdiv@divisor+1)^0,c
   505   00FF48  0E0A               	movlw	10
   506   00FF4A  6E39               	movwf	___awdiv@divisor^0,c
   507   00FF4C  ECCC  F07E         	call	___awdiv	;wreg free
   508   00FF50  5037               	movf	?___awdiv^0,w,c
   509   00FF52  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   510   00FF54  0E02               	movlw	2
   511   00FF56  EC33  F07E         	call	_gpio_port_write_logic
   512   00FF5A                     
   513                           ;Application.c: 51:             _delay(33333);
   514   00FF5A  0E2C               	movlw	44
   515   00FF5C  6E43               	movwf	??_main^0,c
   516   00FF5E  0E49               	movlw	73
   517   00FF60                     u1057:
   518   00FF60  2EE8               	decfsz	wreg,f,c
   519   00FF62  D7FE               	bra	u1057
   520   00FF64  2E43               	decfsz	??_main^0,f,c
   521   00FF66  D7FC               	bra	u1057
   522   00FF68                     
   523                           ;Application.c: 52:             gpio_port_write_logic(PORTD_INDEX, 0x20);
   524   00FF68  0E20               	movlw	32
   525   00FF6A  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   526   00FF6C  0E03               	movlw	3
   527   00FF6E  EC33  F07E         	call	_gpio_port_write_logic
   528   00FF72                     
   529                           ;Application.c: 53:             gpio_port_write_logic(PORTC_INDEX, (uint8)(sec%10));
   530   00FF72  C026  F037         	movff	_sec,___awmod@dividend
   531   00FF76  6A38               	clrf	(___awmod@dividend+1)^0,c
   532   00FF78  0E00               	movlw	0
   533   00FF7A  6E3A               	movwf	(___awmod@divisor+1)^0,c
   534   00FF7C  0E0A               	movlw	10
   535   00FF7E  6E39               	movwf	___awmod@divisor^0,c
   536   00FF80  EC74  F07E         	call	___awmod	;wreg free
   537   00FF84  5037               	movf	?___awmod^0,w,c
   538   00FF86  6E3F               	movwf	gpio_port_write_logic@logic^0,c
   539   00FF88  0E02               	movlw	2
   540   00FF8A  EC33  F07E         	call	_gpio_port_write_logic
   541   00FF8E                     
   542                           ;Application.c: 54:             _delay(3333);
   543   00FF8E  0E05               	movlw	5
   544   00FF90  6E43               	movwf	??_main^0,c
   545   00FF92  0E53               	movlw	83
   546   00FF94                     u1067:
   547   00FF94  2EE8               	decfsz	wreg,f,c
   548   00FF96  D7FE               	bra	u1067
   549   00FF98  2E43               	decfsz	??_main^0,f,c
   550   00FF9A  D7FC               	bra	u1067
   551   00FF9C                     
   552                           ;Application.c: 55:         }
   553   00FF9C  2A44               	incf	main@counter^0,f,c
   554   00FF9E  0E32               	movlw	50
   555   00FFA0  6444               	cpfsgt	main@counter^0,c
   556   00FFA2  EFD5  F07F         	goto	u971
   557   00FFA6  EFD7  F07F         	goto	u970
   558   00FFAA                     u971:
   559   00FFAA  EF32  F07F         	goto	l1654
   560   00FFAE                     u970:
   561   00FFAE                     
   562                           ;Application.c: 56:         sec++;
   563   00FFAE  2A26               	incf	_sec^0,f,c
   564   00FFB0                     
   565                           ;Application.c: 57:         if(sec == 60){
   566   00FFB0  0E3C               	movlw	60
   567   00FFB2  1826               	xorwf	_sec^0,w,c
   568   00FFB4  A4D8               	btfss	status,2,c
   569   00FFB6  EFDF  F07F         	goto	u981
   570   00FFBA  EFE1  F07F         	goto	u980
   571   00FFBE                     u981:
   572   00FFBE  EFE4  F07F         	goto	l1692
   573   00FFC2                     u980:
   574   00FFC2                     
   575                           ;Application.c: 58:             sec = 0;
   576   00FFC2  0E00               	movlw	0
   577   00FFC4  6E26               	movwf	_sec^0,c
   578   00FFC6                     
   579                           ;Application.c: 59:             min++;
   580   00FFC6  2A25               	incf	_min^0,f,c
   581   00FFC8                     l1692:
   582                           
   583                           ;Application.c: 61:         if(min == 60){
   584   00FFC8  0E3C               	movlw	60
   585   00FFCA  1825               	xorwf	_min^0,w,c
   586   00FFCC  A4D8               	btfss	status,2,c
   587   00FFCE  EFEB  F07F         	goto	u991
   588   00FFD2  EFED  F07F         	goto	u990
   589   00FFD6                     u991:
   590   00FFD6  EFF0  F07F         	goto	l1698
   591   00FFDA                     u990:
   592   00FFDA                     
   593                           ;Application.c: 62:             min = 0;
   594   00FFDA  0E00               	movlw	0
   595   00FFDC  6E25               	movwf	_min^0,c
   596   00FFDE                     
   597                           ;Application.c: 63:             hour++;
   598   00FFDE  2A24               	incf	_hour^0,f,c
   599   00FFE0                     l1698:
   600                           
   601                           ;Application.c: 65:         if(hour == 12){
   602   00FFE0  0E0C               	movlw	12
   603   00FFE2  1824               	xorwf	_hour^0,w,c
   604   00FFE4  A4D8               	btfss	status,2,c
   605   00FFE6  EFF7  F07F         	goto	u1001
   606   00FFEA  EFF9  F07F         	goto	u1000
   607   00FFEE                     u1001:
   608   00FFEE  EF30  F07F         	goto	l1648
   609   00FFF2                     u1000:
   610   00FFF2                     
   611                           ;Application.c: 66:             hour = 0;
   612   00FFF2  0E00               	movlw	0
   613   00FFF4  6E24               	movwf	_hour^0,c
   614   00FFF6                     
   615                           ;Application.c: 67:             hour++;
   616   00FFF6  2A24               	incf	_hour^0,f,c
   617   00FFF8  EF30  F07F         	goto	l1648
   618   00FFFC  EF00  F000         	goto	start
   619   010000                     __end_of_main:
   620                           	callstack 0
   621                           
   622 ;; *************** function _gpio_port_write_logic *****************
   623 ;; Defined at:
   624 ;;		line 170 in file "MCAL_Layer/hal_gpio.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  port            1    wreg     const enum E2816
   627 ;;  logic           1    8[COMRAM] unsigned char 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  port            1   11[COMRAM] const enum E2816
   630 ;;  ret             1    0        unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      unsigned char 
   633 ;; Registers used:
   634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   640 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;Total ram usage:        4 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text1
   654   00FC66                     __ptext1:
   655                           	callstack 0
   656   00FC66                     _gpio_port_write_logic:
   657                           	callstack 30
   658                           
   659                           ;incstack = 0
   660                           ;gpio_port_write_logic@port stored from wreg
   661   00FC66  6E42               	movwf	gpio_port_write_logic@port^0,c
   662   00FC68                     
   663                           ;MCAL_Layer/hal_gpio.c: 172:     if(port > 5 - 1) ret = (STD_ReturnType)0x00;
   664   00FC68  0E04               	movlw	4
   665   00FC6A  6442               	cpfsgt	gpio_port_write_logic@port^0,c
   666   00FC6C  EF3A  F07E         	goto	u841
   667   00FC70  EF3C  F07E         	goto	u840
   668   00FC74                     u841:
   669   00FC74  EF3E  F07E         	goto	l1560
   670   00FC78                     u840:
   671   00FC78  EF50  F07E         	goto	l236
   672   00FC7C                     l1560:
   673                           
   674                           ;MCAL_Layer/hal_gpio.c: 174:         *lat_register[port] = logic;
   675   00FC7C  5042               	movf	gpio_port_write_logic@port^0,w,c
   676   00FC7E  0D02               	mullw	2
   677   00FC80  0E0B               	movlw	low _lat_register
   678   00FC82  24F3               	addwf	243,w,c
   679   00FC84  6ED9               	movwf	fsr2l,c
   680   00FC86  0E00               	movlw	high _lat_register
   681   00FC88  20F4               	addwfc	prodh,w,c
   682   00FC8A  6EDA               	movwf	fsr2h,c
   683   00FC8C  CFDE F040          	movff	postinc2,??_gpio_port_write_logic
   684   00FC90  CFDD F041          	movff	postdec2,??_gpio_port_write_logic+1
   685   00FC94  C040  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   686   00FC98  C041  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   687   00FC9C  C03F  FFDF         	movff	gpio_port_write_logic@logic,indf2
   688   00FCA0                     l236:
   689   00FCA0  0012               	return		;funcret
   690   00FCA2                     __end_of_gpio_port_write_logic:
   691                           	callstack 0
   692                           
   693 ;; *************** function ___awmod *****************
   694 ;; Defined at:
   695 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awmod.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  dividend        2    0[COMRAM] int 
   698 ;;  divisor         2    2[COMRAM] int 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  sign            1    5[COMRAM] unsigned char 
   701 ;;  counter         1    4[COMRAM] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  2    0[COMRAM] int 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        6 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; This function calls:
   718 ;;		Nothing
   719 ;; This function is called by:
   720 ;;		_main
   721 ;; This function uses a non-reentrant model
   722 ;;
   723                           
   724                           	psect	text2
   725   00FCE8                     __ptext2:
   726                           	callstack 0
   727   00FCE8                     ___awmod:
   728                           	callstack 30
   729   00FCE8  0E00               	movlw	0
   730   00FCEA  6E3C               	movwf	___awmod@sign^0,c
   731   00FCEC  BE38               	btfsc	(___awmod@dividend+1)^0,7,c
   732   00FCEE  EF7D  F07E         	goto	u910
   733   00FCF2  EF7B  F07E         	goto	u911
   734   00FCF6                     u911:
   735   00FCF6  EF83  F07E         	goto	l1618
   736   00FCFA                     u910:
   737   00FCFA  6C37               	negf	___awmod@dividend^0,c
   738   00FCFC  1E38               	comf	(___awmod@dividend+1)^0,f,c
   739   00FCFE  B0D8               	btfsc	status,0,c
   740   00FD00  2A38               	incf	(___awmod@dividend+1)^0,f,c
   741   00FD02  0E01               	movlw	1
   742   00FD04  6E3C               	movwf	___awmod@sign^0,c
   743   00FD06                     l1618:
   744   00FD06  BE3A               	btfsc	(___awmod@divisor+1)^0,7,c
   745   00FD08  EF8A  F07E         	goto	u920
   746   00FD0C  EF88  F07E         	goto	u921
   747   00FD10                     u921:
   748   00FD10  EF8E  F07E         	goto	l1622
   749   00FD14                     u920:
   750   00FD14  6C39               	negf	___awmod@divisor^0,c
   751   00FD16  1E3A               	comf	(___awmod@divisor+1)^0,f,c
   752   00FD18  B0D8               	btfsc	status,0,c
   753   00FD1A  2A3A               	incf	(___awmod@divisor+1)^0,f,c
   754   00FD1C                     l1622:
   755   00FD1C  5039               	movf	___awmod@divisor^0,w,c
   756   00FD1E  103A               	iorwf	(___awmod@divisor+1)^0,w,c
   757   00FD20  B4D8               	btfsc	status,2,c
   758   00FD22  EF95  F07E         	goto	u931
   759   00FD26  EF97  F07E         	goto	u930
   760   00FD2A                     u931:
   761   00FD2A  EFBB  F07E         	goto	l1638
   762   00FD2E                     u930:
   763   00FD2E  0E01               	movlw	1
   764   00FD30  6E3B               	movwf	___awmod@counter^0,c
   765   00FD32  EF9F  F07E         	goto	l1628
   766   00FD36                     l1626:
   767   00FD36  90D8               	bcf	status,0,c
   768   00FD38  3639               	rlcf	___awmod@divisor^0,f,c
   769   00FD3A  363A               	rlcf	(___awmod@divisor+1)^0,f,c
   770   00FD3C  2A3B               	incf	___awmod@counter^0,f,c
   771   00FD3E                     l1628:
   772   00FD3E  AE3A               	btfss	(___awmod@divisor+1)^0,7,c
   773   00FD40  EFA4  F07E         	goto	u941
   774   00FD44  EFA6  F07E         	goto	u940
   775   00FD48                     u941:
   776   00FD48  EF9B  F07E         	goto	l1626
   777   00FD4C                     u940:
   778   00FD4C                     l1630:
   779   00FD4C  5039               	movf	___awmod@divisor^0,w,c
   780   00FD4E  5C37               	subwf	___awmod@dividend^0,w,c
   781   00FD50  503A               	movf	(___awmod@divisor+1)^0,w,c
   782   00FD52  5838               	subwfb	(___awmod@dividend+1)^0,w,c
   783   00FD54  A0D8               	btfss	status,0,c
   784   00FD56  EFAF  F07E         	goto	u951
   785   00FD5A  EFB1  F07E         	goto	u950
   786   00FD5E                     u951:
   787   00FD5E  EFB5  F07E         	goto	l1634
   788   00FD62                     u950:
   789   00FD62  5039               	movf	___awmod@divisor^0,w,c
   790   00FD64  5E37               	subwf	___awmod@dividend^0,f,c
   791   00FD66  503A               	movf	(___awmod@divisor+1)^0,w,c
   792   00FD68  5A38               	subwfb	(___awmod@dividend+1)^0,f,c
   793   00FD6A                     l1634:
   794   00FD6A  90D8               	bcf	status,0,c
   795   00FD6C  323A               	rrcf	(___awmod@divisor+1)^0,f,c
   796   00FD6E  3239               	rrcf	___awmod@divisor^0,f,c
   797   00FD70  2E3B               	decfsz	___awmod@counter^0,f,c
   798   00FD72  EFA6  F07E         	goto	l1630
   799   00FD76                     l1638:
   800   00FD76  503C               	movf	___awmod@sign^0,w,c
   801   00FD78  B4D8               	btfsc	status,2,c
   802   00FD7A  EFC1  F07E         	goto	u961
   803   00FD7E  EFC3  F07E         	goto	u960
   804   00FD82                     u961:
   805   00FD82  EFC7  F07E         	goto	l1642
   806   00FD86                     u960:
   807   00FD86  6C37               	negf	___awmod@dividend^0,c
   808   00FD88  1E38               	comf	(___awmod@dividend+1)^0,f,c
   809   00FD8A  B0D8               	btfsc	status,0,c
   810   00FD8C  2A38               	incf	(___awmod@dividend+1)^0,f,c
   811   00FD8E                     l1642:
   812   00FD8E  C037  F037         	movff	___awmod@dividend,?___awmod
   813   00FD92  C038  F038         	movff	___awmod@dividend+1,?___awmod+1
   814   00FD96  0012               	return		;funcret
   815   00FD98                     __end_of___awmod:
   816                           	callstack 0
   817                           
   818 ;; *************** function ___awdiv *****************
   819 ;; Defined at:
   820 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  dividend        2    0[COMRAM] int 
   823 ;;  divisor         2    2[COMRAM] int 
   824 ;; Auto vars:     Size  Location     Type
   825 ;;  quotient        2    6[COMRAM] int 
   826 ;;  sign            1    5[COMRAM] unsigned char 
   827 ;;  counter         1    4[COMRAM] unsigned char 
   828 ;; Return value:  Size  Location     Type
   829 ;;                  2    0[COMRAM] int 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   841 ;;Total ram usage:        8 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; This function calls:
   844 ;;		Nothing
   845 ;; This function is called by:
   846 ;;		_main
   847 ;; This function uses a non-reentrant model
   848 ;;
   849                           
   850                           	psect	text3
   851   00FD98                     __ptext3:
   852                           	callstack 0
   853   00FD98                     ___awdiv:
   854                           	callstack 30
   855   00FD98  0E00               	movlw	0
   856   00FD9A  6E3C               	movwf	___awdiv@sign^0,c
   857   00FD9C  BE3A               	btfsc	(___awdiv@divisor+1)^0,7,c
   858   00FD9E  EFD5  F07E         	goto	u850
   859   00FDA2  EFD3  F07E         	goto	u851
   860   00FDA6                     u851:
   861   00FDA6  EFDB  F07E         	goto	l1574
   862   00FDAA                     u850:
   863   00FDAA  6C39               	negf	___awdiv@divisor^0,c
   864   00FDAC  1E3A               	comf	(___awdiv@divisor+1)^0,f,c
   865   00FDAE  B0D8               	btfsc	status,0,c
   866   00FDB0  2A3A               	incf	(___awdiv@divisor+1)^0,f,c
   867   00FDB2  0E01               	movlw	1
   868   00FDB4  6E3C               	movwf	___awdiv@sign^0,c
   869   00FDB6                     l1574:
   870   00FDB6  BE38               	btfsc	(___awdiv@dividend+1)^0,7,c
   871   00FDB8  EFE2  F07E         	goto	u860
   872   00FDBC  EFE0  F07E         	goto	u861
   873   00FDC0                     u861:
   874   00FDC0  EFE8  F07E         	goto	l1580
   875   00FDC4                     u860:
   876   00FDC4  6C37               	negf	___awdiv@dividend^0,c
   877   00FDC6  1E38               	comf	(___awdiv@dividend+1)^0,f,c
   878   00FDC8  B0D8               	btfsc	status,0,c
   879   00FDCA  2A38               	incf	(___awdiv@dividend+1)^0,f,c
   880   00FDCC  0E01               	movlw	1
   881   00FDCE  1A3C               	xorwf	___awdiv@sign^0,f,c
   882   00FDD0                     l1580:
   883   00FDD0  0E00               	movlw	0
   884   00FDD2  6E3E               	movwf	(___awdiv@quotient+1)^0,c
   885   00FDD4  0E00               	movlw	0
   886   00FDD6  6E3D               	movwf	___awdiv@quotient^0,c
   887   00FDD8  5039               	movf	___awdiv@divisor^0,w,c
   888   00FDDA  103A               	iorwf	(___awdiv@divisor+1)^0,w,c
   889   00FDDC  B4D8               	btfsc	status,2,c
   890   00FDDE  EFF3  F07E         	goto	u871
   891   00FDE2  EFF5  F07E         	goto	u870
   892   00FDE6                     u871:
   893   00FDE6  EF1D  F07F         	goto	l1602
   894   00FDEA                     u870:
   895   00FDEA  0E01               	movlw	1
   896   00FDEC  6E3B               	movwf	___awdiv@counter^0,c
   897   00FDEE  EFFD  F07E         	goto	l1588
   898   00FDF2                     l1586:
   899   00FDF2  90D8               	bcf	status,0,c
   900   00FDF4  3639               	rlcf	___awdiv@divisor^0,f,c
   901   00FDF6  363A               	rlcf	(___awdiv@divisor+1)^0,f,c
   902   00FDF8  2A3B               	incf	___awdiv@counter^0,f,c
   903   00FDFA                     l1588:
   904   00FDFA  AE3A               	btfss	(___awdiv@divisor+1)^0,7,c
   905   00FDFC  EF02  F07F         	goto	u881
   906   00FE00  EF04  F07F         	goto	u880
   907   00FE04                     u881:
   908   00FE04  EFF9  F07E         	goto	l1586
   909   00FE08                     u880:
   910   00FE08                     l1590:
   911   00FE08  90D8               	bcf	status,0,c
   912   00FE0A  363D               	rlcf	___awdiv@quotient^0,f,c
   913   00FE0C  363E               	rlcf	(___awdiv@quotient+1)^0,f,c
   914   00FE0E  5039               	movf	___awdiv@divisor^0,w,c
   915   00FE10  5C37               	subwf	___awdiv@dividend^0,w,c
   916   00FE12  503A               	movf	(___awdiv@divisor+1)^0,w,c
   917   00FE14  5838               	subwfb	(___awdiv@dividend+1)^0,w,c
   918   00FE16  A0D8               	btfss	status,0,c
   919   00FE18  EF10  F07F         	goto	u891
   920   00FE1C  EF12  F07F         	goto	u890
   921   00FE20                     u891:
   922   00FE20  EF17  F07F         	goto	l1598
   923   00FE24                     u890:
   924   00FE24  5039               	movf	___awdiv@divisor^0,w,c
   925   00FE26  5E37               	subwf	___awdiv@dividend^0,f,c
   926   00FE28  503A               	movf	(___awdiv@divisor+1)^0,w,c
   927   00FE2A  5A38               	subwfb	(___awdiv@dividend+1)^0,f,c
   928   00FE2C  803D               	bsf	___awdiv@quotient^0,0,c
   929   00FE2E                     l1598:
   930   00FE2E  90D8               	bcf	status,0,c
   931   00FE30  323A               	rrcf	(___awdiv@divisor+1)^0,f,c
   932   00FE32  3239               	rrcf	___awdiv@divisor^0,f,c
   933   00FE34  2E3B               	decfsz	___awdiv@counter^0,f,c
   934   00FE36  EF04  F07F         	goto	l1590
   935   00FE3A                     l1602:
   936   00FE3A  503C               	movf	___awdiv@sign^0,w,c
   937   00FE3C  B4D8               	btfsc	status,2,c
   938   00FE3E  EF23  F07F         	goto	u901
   939   00FE42  EF25  F07F         	goto	u900
   940   00FE46                     u901:
   941   00FE46  EF29  F07F         	goto	l1606
   942   00FE4A                     u900:
   943   00FE4A  6C3D               	negf	___awdiv@quotient^0,c
   944   00FE4C  1E3E               	comf	(___awdiv@quotient+1)^0,f,c
   945   00FE4E  B0D8               	btfsc	status,0,c
   946   00FE50  2A3E               	incf	(___awdiv@quotient+1)^0,f,c
   947   00FE52                     l1606:
   948   00FE52  C03D  F037         	movff	___awdiv@quotient,?___awdiv
   949   00FE56  C03E  F038         	movff	___awdiv@quotient+1,?___awdiv+1
   950   00FE5A  0012               	return		;funcret
   951   00FE5C                     __end_of___awdiv:
   952                           	callstack 0
   953                           
   954 ;; *************** function _Application_initialize *****************
   955 ;; Defined at:
   956 ;;		line 74 in file "Application.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;Total ram usage:        0 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 1
   977 ;; This function calls:
   978 ;;		_gpio_port_direction_init
   979 ;; This function is called by:
   980 ;;		_main
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text4
   985   00FBEE                     __ptext4:
   986                           	callstack 0
   987   00FBEE                     _Application_initialize:
   988                           	callstack 29
   989   00FBEE                     
   990                           ;Application.c: 75:     ret = gpio_port_direction_init(PORTC_INDEX, GPIO_OUTPUT_DIRECTIO
      +                          N);
   991   00FBEE  0E00               	movlw	0
   992   00FBF0  6E37               	movwf	gpio_port_direction_init@direction_init^0,c
   993   00FBF2  0E02               	movlw	2
   994   00FBF4  EC51  F07E         	call	_gpio_port_direction_init
   995   00FBF8  6E27               	movwf	_ret^0,c
   996                           
   997                           ;Application.c: 76:     ret = gpio_port_direction_init(PORTD_INDEX, GPIO_OUTPUT_DIRECTIO
      +                          N);
   998   00FBFA  0E00               	movlw	0
   999   00FBFC  6E37               	movwf	gpio_port_direction_init@direction_init^0,c
  1000   00FBFE  0E03               	movlw	3
  1001   00FC00  EC51  F07E         	call	_gpio_port_direction_init
  1002   00FC04  6E27               	movwf	_ret^0,c
  1003   00FC06  0012               	return		;funcret
  1004   00FC08                     __end_of_Application_initialize:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _gpio_port_direction_init *****************
  1008 ;; Defined at:
  1009 ;;		line 133 in file "MCAL_Layer/hal_gpio.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  port            1    wreg     const enum E2816
  1012 ;;  direction_in    1    0[COMRAM] unsigned char 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  port            1    4[COMRAM] const enum E2816
  1015 ;;  ret             1    3[COMRAM] unsigned char 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      unsigned char 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1025 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;Total ram usage:        5 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; This function calls:
  1032 ;;		Nothing
  1033 ;; This function is called by:
  1034 ;;		_Application_initialize
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text5
  1039   00FCA2                     __ptext5:
  1040                           	callstack 0
  1041   00FCA2                     _gpio_port_direction_init:
  1042                           	callstack 29
  1043                           
  1044                           ;incstack = 0
  1045                           ;gpio_port_direction_init@port stored from wreg
  1046   00FCA2  6E3B               	movwf	gpio_port_direction_init@port^0,c
  1047   00FCA4                     
  1048                           ;MCAL_Layer/hal_gpio.c: 134:     STD_ReturnType ret = (STD_ReturnType)0x01;
  1049   00FCA4  0E01               	movlw	1
  1050   00FCA6  6E3A               	movwf	gpio_port_direction_init@ret^0,c
  1051   00FCA8                     
  1052                           ;MCAL_Layer/hal_gpio.c: 135:     if(port > 5 - 1) ret = (STD_ReturnType)0x00;
  1053   00FCA8  0E04               	movlw	4
  1054   00FCAA  643B               	cpfsgt	gpio_port_direction_init@port^0,c
  1055   00FCAC  EF5A  F07E         	goto	u831
  1056   00FCB0  EF5C  F07E         	goto	u830
  1057   00FCB4                     u831:
  1058   00FCB4  EF60  F07E         	goto	l1548
  1059   00FCB8                     u830:
  1060   00FCB8  0E00               	movlw	0
  1061   00FCBA  6E3A               	movwf	gpio_port_direction_init@ret^0,c
  1062   00FCBC  EF72  F07E         	goto	l1550
  1063   00FCC0                     l1548:
  1064                           
  1065                           ;MCAL_Layer/hal_gpio.c: 137:         *tris_register[port] = direction_init;
  1066   00FCC0  503B               	movf	gpio_port_direction_init@port^0,w,c
  1067   00FCC2  0D02               	mullw	2
  1068   00FCC4  0E15               	movlw	low _tris_register
  1069   00FCC6  24F3               	addwf	243,w,c
  1070   00FCC8  6ED9               	movwf	fsr2l,c
  1071   00FCCA  0E00               	movlw	high _tris_register
  1072   00FCCC  20F4               	addwfc	prodh,w,c
  1073   00FCCE  6EDA               	movwf	fsr2h,c
  1074   00FCD0  CFDE F038          	movff	postinc2,??_gpio_port_direction_init
  1075   00FCD4  CFDD F039          	movff	postdec2,??_gpio_port_direction_init+1
  1076   00FCD8  C038  FFD9         	movff	??_gpio_port_direction_init,fsr2l
  1077   00FCDC  C039  FFDA         	movff	??_gpio_port_direction_init+1,fsr2h
  1078   00FCE0  C037  FFDF         	movff	gpio_port_direction_init@direction_init,indf2
  1079   00FCE4                     l1550:
  1080                           
  1081                           ;MCAL_Layer/hal_gpio.c: 139:     return ret;
  1082   00FCE4  503A               	movf	gpio_port_direction_init@ret^0,w,c
  1083   00FCE6  0012               	return		;funcret
  1084   00FCE8                     __end_of_gpio_port_direction_init:
  1085                           	callstack 0
  1086   000000                     
  1087                           	psect	rparam
  1088   000000                     
  1089                           	psect	idloc
  1090                           
  1091                           ;Config register IDLOC0 @ 0x200000
  1092                           ;	unspecified, using default values
  1093   200000                     	org	2097152
  1094   200000  FF                 	db	255
  1095                           
  1096                           ;Config register IDLOC1 @ 0x200001
  1097                           ;	unspecified, using default values
  1098   200001                     	org	2097153
  1099   200001  FF                 	db	255
  1100                           
  1101                           ;Config register IDLOC2 @ 0x200002
  1102                           ;	unspecified, using default values
  1103   200002                     	org	2097154
  1104   200002  FF                 	db	255
  1105                           
  1106                           ;Config register IDLOC3 @ 0x200003
  1107                           ;	unspecified, using default values
  1108   200003                     	org	2097155
  1109   200003  FF                 	db	255
  1110                           
  1111                           ;Config register IDLOC4 @ 0x200004
  1112                           ;	unspecified, using default values
  1113   200004                     	org	2097156
  1114   200004  FF                 	db	255
  1115                           
  1116                           ;Config register IDLOC5 @ 0x200005
  1117                           ;	unspecified, using default values
  1118   200005                     	org	2097157
  1119   200005  FF                 	db	255
  1120                           
  1121                           ;Config register IDLOC6 @ 0x200006
  1122                           ;	unspecified, using default values
  1123   200006                     	org	2097158
  1124   200006  FF                 	db	255
  1125                           
  1126                           ;Config register IDLOC7 @ 0x200007
  1127                           ;	unspecified, using default values
  1128   200007                     	org	2097159
  1129   200007  FF                 	db	255
  1130                           
  1131                           	psect	config
  1132                           
  1133                           ; Padding undefined space
  1134   300000                     	org	3145728
  1135   300000  FF                 	db	255
  1136                           
  1137                           ;Config register CONFIG1H @ 0x300001
  1138                           ;	Oscillator Selection bits
  1139                           ;	OSC = HS, HS oscillator
  1140                           ;	Fail-Safe Clock Monitor Enable bit
  1141                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1142                           ;	Internal/External Oscillator Switchover bit
  1143                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1144   300001                     	org	3145729
  1145   300001  02                 	db	2
  1146                           
  1147                           ;Config register CONFIG2L @ 0x300002
  1148                           ;	Power-up Timer Enable bit
  1149                           ;	PWRT = OFF, PWRT disabled
  1150                           ;	Brown-out Reset Enable bits
  1151                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1152                           ;	Brown Out Reset Voltage bits
  1153                           ;	BORV = 1, 
  1154   300002                     	org	3145730
  1155   300002  09                 	db	9
  1156                           
  1157                           ;Config register CONFIG2H @ 0x300003
  1158                           ;	Watchdog Timer Enable bit
  1159                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1160                           ;	Watchdog Timer Postscale Select bits
  1161                           ;	WDTPS = 32768, 1:32768
  1162   300003                     	org	3145731
  1163   300003  1E                 	db	30
  1164                           
  1165                           ; Padding undefined space
  1166   300004                     	org	3145732
  1167   300004  FF                 	db	255
  1168                           
  1169                           ;Config register CONFIG3H @ 0x300005
  1170                           ;	CCP2 MUX bit
  1171                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1172                           ;	PORTB A/D Enable bit
  1173                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1174                           ;	Low-Power Timer1 Oscillator Enable bit
  1175                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1176                           ;	MCLR Pin Enable bit
  1177                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1178   300005                     	org	3145733
  1179   300005  83                 	db	131
  1180                           
  1181                           ;Config register CONFIG4L @ 0x300006
  1182                           ;	Stack Full/Underflow Reset Enable bit
  1183                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1184                           ;	Single-Supply ICSP Enable bit
  1185                           ;	LVP = OFF, Single-Supply ICSP disabled
  1186                           ;	Extended Instruction Set Enable bit
  1187                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1188                           ;	Background Debugger Enable bit
  1189                           ;	DEBUG = 0x1, unprogrammed default
  1190   300006                     	org	3145734
  1191   300006  81                 	db	129
  1192                           
  1193                           ; Padding undefined space
  1194   300007                     	org	3145735
  1195   300007  FF                 	db	255
  1196                           
  1197                           ;Config register CONFIG5L @ 0x300008
  1198                           ;	Code Protection bit
  1199                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1200                           ;	Code Protection bit
  1201                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1202                           ;	Code Protection bit
  1203                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1204                           ;	Code Protection bit
  1205                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1206   300008                     	org	3145736
  1207   300008  0F                 	db	15
  1208                           
  1209                           ;Config register CONFIG5H @ 0x300009
  1210                           ;	Boot Block Code Protection bit
  1211                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1212                           ;	Data EEPROM Code Protection bit
  1213                           ;	CPD = OFF, Data EEPROM not code-protected
  1214   300009                     	org	3145737
  1215   300009  C0                 	db	192
  1216                           
  1217                           ;Config register CONFIG6L @ 0x30000A
  1218                           ;	Write Protection bit
  1219                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1220                           ;	Write Protection bit
  1221                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1222                           ;	Write Protection bit
  1223                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1224                           ;	Write Protection bit
  1225                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1226   30000A                     	org	3145738
  1227   30000A  0F                 	db	15
  1228                           
  1229                           ;Config register CONFIG6H @ 0x30000B
  1230                           ;	Configuration Register Write Protection bit
  1231                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1232                           ;	Boot Block Write Protection bit
  1233                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1234                           ;	Data EEPROM Write Protection bit
  1235                           ;	WRTD = OFF, Data EEPROM not write-protected
  1236   30000B                     	org	3145739
  1237   30000B  E0                 	db	224
  1238                           
  1239                           ;Config register CONFIG7L @ 0x30000C
  1240                           ;	Table Read Protection bit
  1241                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1242                           ;	Table Read Protection bit
  1243                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1244                           ;	Table Read Protection bit
  1245                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1246                           ;	Table Read Protection bit
  1247                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1248   30000C                     	org	3145740
  1249   30000C  0F                 	db	15
  1250                           
  1251                           ;Config register CONFIG7H @ 0x30000D
  1252                           ;	Boot Block Table Read Protection bit
  1253                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1254   30000D                     	org	3145741
  1255   30000D  40                 	db	64
  1256                           tosu	equ	0xFFF
  1257                           tosh	equ	0xFFE
  1258                           tosl	equ	0xFFD
  1259                           stkptr	equ	0xFFC
  1260                           pclatu	equ	0xFFB
  1261                           pclath	equ	0xFFA
  1262                           pcl	equ	0xFF9
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           prodh	equ	0xFF4
  1268                           prodl	equ	0xFF3
  1269                           indf0	equ	0xFEF
  1270                           postinc0	equ	0xFEE
  1271                           postdec0	equ	0xFED
  1272                           preinc0	equ	0xFEC
  1273                           plusw0	equ	0xFEB
  1274                           fsr0h	equ	0xFEA
  1275                           fsr0l	equ	0xFE9
  1276                           wreg	equ	0xFE8
  1277                           indf1	equ	0xFE7
  1278                           postinc1	equ	0xFE6
  1279                           postdec1	equ	0xFE5
  1280                           preinc1	equ	0xFE4
  1281                           plusw1	equ	0xFE3
  1282                           fsr1h	equ	0xFE2
  1283                           fsr1l	equ	0xFE1
  1284                           bsr	equ	0xFE0
  1285                           indf2	equ	0xFDF
  1286                           postinc2	equ	0xFDE
  1287                           postdec2	equ	0xFDD
  1288                           preinc2	equ	0xFDC
  1289                           plusw2	equ	0xFDB
  1290                           fsr2h	equ	0xFDA
  1291                           fsr2l	equ	0xFD9
  1292                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        39
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     14      68
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    port_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    lat_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    tris_register	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISE(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISB(BITBIGSFRh[1]), 
		 -> TRISA(BITBIGSFRll[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_port_write_logic
    _gpio_port_write_logic->___awdiv
    _Application_initialize->_gpio_port_direction_init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2782
                                             12 COMRAM     2     2      0
             _Application_initialize
                            ___awdiv
                            ___awmod
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     986
                                              8 COMRAM     4     3      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     752
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Application_initialize                               0     0      0     242
           _gpio_port_direction_init
 ---------------------------------------------------------------------------------
 (2) _gpio_port_direction_init                             5     4      1     242
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_initialize
     _gpio_port_direction_init
   ___awdiv
   ___awmod
   _gpio_port_write_logic
     ___awdiv (ARG)
     ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      E      44       1       53.5%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      39        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Sep 20 23:42:07 2022

                          ___awdiv@sign 003C                                     l224 FCE6  
                                   l236 FCA0                                     l282 FC06  
                                   l516 FE5A                                     l529 FD96  
                                   u900 FE4A                                     u901 FE46  
                                   u830 FCB8                                     u910 FCFA  
                                   u831 FCB4                                     u911 FCF6  
                                   u920 FD14                                     u840 FC78  
                                   u921 FD10                                     u841 FC74  
                                   u850 FDAA                                     u930 FD2E  
                                   u851 FDA6                                     u931 FD2A  
                                   u860 FDC4                                     u940 FD4C  
                                   u861 FDC0                                     u941 FD48  
                                   u870 FDEA                                     u950 FD62  
                                   u871 FDE6                                     u951 FD5E  
                                   u880 FE08                                     u960 FD86  
                                   u881 FE04                                     u961 FD82  
                                   u890 FE24                                     u970 FFAE  
                                   u891 FE20                                     u971 FFAA  
                                   u980 FFC2                                     u981 FFBE  
                                   u990 FFDA                                     u991 FFD6  
                                   _min 0025                                     _sec 0026  
                                   _ret 0027                            ___awmod@sign 003C  
                                   prod 000FF3                     led_initialize@F2876 002E  
                                   wreg 000FE8                   relay_initialize@F2870 002A  
                                  l1600 FE34                                    l1602 FE3A  
                                  l1610 FCE8                                    l1604 FE4A  
                                  l1620 FD14                                    l1612 FCEC  
                                  l1700 FFF2                                    l1550 FCE4  
                                  l1542 FCA4                                    l1606 FE52  
                                  l1630 FD4C                                    l1622 FD1C  
                                  l1614 FCFA                                    l1702 FFF6  
                                  l1544 FCA8                                    l1640 FD86  
                                  l1632 FD62                                    l1624 FD2E  
                                  l1616 FD02                                    l1560 FC7C  
                                  l1546 FCB8                                    l1570 FDAA  
                                  l1642 FD8E                                    l1634 FD6A  
                                  l1626 FD36                                    l1618 FD06  
                                  l1554 FC68                                    l1548 FCC0  
                                  l1564 FBEE                                    l1580 FDD0  
                                  l1572 FDB2                                    l1636 FD70  
                                  l1628 FD3E                                    l1556 FC68  
                                  l1660 FEA2                                    l1590 FE08  
                                  l1582 FDD8                                    l1574 FDB6  
                                  l1566 FD98                                    l1638 FD76  
                                  l1558 FC78                                    l1670 FF26  
                                  l1662 FEBE                                    l1654 FE64  
                                  l1646 FE5C                                    l1592 FE0E  
                                  l1584 FDEA                                    l1576 FDC4  
                                  l1568 FD9C                                    l1680 FF9C  
                                  l1672 FF5A                                    l1664 FEF2  
                                  l1656 FE8A                                    l1648 FE60  
                                  l1594 FE24                                    l1586 FDF2  
                                  l1578 FDCC                                    l1690 FFC6  
                                  l1682 FF9E                                    l1674 FF68  
                                  l1666 FF00                                    l1658 FE98  
                                  l1596 FE2C                                    l1588 FDFA  
                                  l1692 FFC8                                    l1684 FFAE  
                                  l1676 FF72                                    l1668 FF0A  
                                  l1598 FE2E                                    l1694 FFDA  
                                  l1686 FFB0                                    l1678 FF8E  
                                  l1696 FFDE                                    l1688 FFC2  
                                  l1698 FFE0                                    u1000 FFF2  
                                  u1001 FFEE                                    u1017 FE90  
                                  u1027 FEC4                                    u1037 FEF8  
                                  u1047 FF2C                                    u1057 FF60  
                                  u1067 FF94                                    _LATA 000F89  
                                  _LATB 000F8A                                    _LATC 000F8B  
                                  _LATD 000F8C                                    _LATE 000F8D  
                           main@counter 0044                                    _main FE5C  
                                  _hour 0024                                    fsr2h 000FDA  
                                  indf2 000FDF                                    fsr1l 000FE1  
                                  fsr2l 000FD9                                    prodl 000FF3  
                                  start 0000                            ___param_bank 000000  
                 _gpio_port_write_logic FC66                                   ?_main 0037  
                       __end_of___awdiv FE5C                         __end_of___awmod FD98  
                       ___awdiv@divisor 0039                         ___awdiv@counter 003B  
                   relay_turn_off@F2880 0028                                   _PORTA 000F80  
                                 _PORTB 000F81                                   _PORTC 000F82  
                                 _PORTD 000F83                                   _PORTE 000F84  
                                 _TRISA 000F92                                   _TRISB 000F93  
                                 _TRISC 000F94                                   _TRISD 000F95  
                                 _TRISE 000F96                                   tablat 000FF5  
                                 status 000FD8                         __initialization FC30  
                          __end_of_main 0000               ?_gpio_port_direction_init 0037  
                                ??_main 0043                           __activetblptr 000002  
                      led_turn_on@F2881 002D                        ___awdiv@dividend 0037  
                         _tris_register 0015               gpio_port_write_logic@port 0042  
                ?_gpio_port_write_logic 003F                               ??___awdiv 003B  
                             ??___awmod 003B                 ?_Application_initialize 0037  
                                clear_0 FC56                        ___awdiv@quotient 003D  
                       ___awmod@divisor 0039                                  isa$std 000001  
                       ___awmod@counter 003B                            __pdataCOMRAM 0001  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8  gpio_port_direction_init@direction_init 0037  
                            __accesstop 0080                 __end_of__initialization FC5C  
                         ___rparam_used 000001                          __pcstackCOMRAM 0037  
        __end_of_Application_initialize FC08                       led_turn_off@F2886 002C  
              Dc_motor_initialize@F2875 0036                Dc_motor_initialize@F2877 0035  
                               __Hparam 0000                                 __Lparam 0000  
                               ___awdiv FD98                                 ___awmod FCE8  
                               __pcinit FC30                                 __ramtop 1000  
                               __ptext0 FE5C                                 __ptext1 FC66  
                               __ptext2 FCE8                                 __ptext3 FD98  
                               __ptext4 FBEE                                 __ptext5 FCA2  
                      ___awmod@dividend 0037                    end_of_initialization FC5C  
                            _segment_t1 001F                           __Lmediumconst 0000  
               ??_gpio_port_write_logic 0040                                 postdec1 000FE5  
                               postdec2 000FDD                                 postinc0 000FEE  
                               postinc2 000FDE            gpio_port_direction_init@port 003B  
              _gpio_port_direction_init FCA2                      relay_turn_on@F2875 0029  
                         __pidataCOMRAM FC09                     start_initialization FC30  
                          _lat_register 000B                             __pbssCOMRAM 0028  
                              ?___awdiv 0037                                ?___awmod 0037  
              ??_Application_initialize 003C           __end_of_gpio_port_write_logic FCA2  
                 led_toggle_logic@F2891 002B              ??_gpio_port_direction_init 0038  
                             copy_data0 FC44                      Dc_motor_stop@F2900 002F  
                    Dc_motor_stop@F2898 0030                                __Hrparam 0000  
                              __Lrparam 0000                 Dc_motor_turn_left@F2884 0034  
               Dc_motor_turn_left@F2886 0033                                isa$xinst 000000  
              Dc_motor_turn_right@F2891 0032                Dc_motor_turn_right@F2893 0031  
                _Application_initialize FBEE             gpio_port_direction_init@ret 003A  
      __end_of_gpio_port_direction_init FCE8              gpio_port_write_logic@logic 003F  
                         _port_register 0001  
